apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-k8s
  namespace: demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-k8s
  template:
    metadata:
      labels:
        app: springboot-k8s
    spec:
      containers:
        - name: app
          image: 275581418810.dkr.ecr.eu-north-1.amazonaws.com/springboot-k8s-demo
          envFrom:
            - configMapRef:
                name: demo-config 
            - secretRef:
                name: demo-secrets
          env:
          - name: POD_NAME
            valueFrom: { fieldRef: { fieldPath: metadata.name } }
          - name: POD_UID
            valueFrom: { fieldRef: { fieldPath: metadata.uid } }
          - name: POD_IP
            valueFrom: { fieldRef: { fieldPath: status.podIP } }
          - name: NODE_NAME
            valueFrom: { fieldRef: { fieldPath: spec.nodeName } }
          - name: NAMESPACE
            valueFrom: { fieldRef: { fieldPath: metadata.namespace } }
          - name: IMAGE_TAG
            value: "dev"

          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 24      
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests: { cpu: "100m", memory: "256Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }


