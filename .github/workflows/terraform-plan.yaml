name: Terraform Plan

on:
  pull_request:
    branches: 
      - main
    paths:
      - 'ops/terraform/**'
      - .github/worflows/terraform-plan.yaml
  workflow_dispatch:

permissions:
  id-token: write         
  contents: read
  pull-requests: write    

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_WORKDIR: ops/terraform

jobs:
  plan:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.TF_WORKDIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ${{ env.TF_WORKDIR }}/.terraform
          key: tf-${{ runner.os }}-${{ hashFiles(format('{0}/**/*.tf', env.TF_WORKDIR)) }}
          restore-keys: |
            tf-${{ runner.os }}-

      - name: Terraform fmt (check)
        id: fmt
        run: terraform fmt -check -diff

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: |
          terraform plan -input=false -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: |
            ${{ env.TF_WORKDIR }}/tfplan
            ${{ env.TF_WORKDIR }}/plan.txt
          if-no-files-found: error
          retention-days: 7

      - name: Comment plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('${{ env.TF_WORKDIR }}/plan.txt', 'utf8');
            const body = [
              '### Terraform Plan 📐',
              '',
              '```diff',
              plan.length > 60000 ? plan.slice(0, 60000) + '\n... (truncated) ...' : plan,
              '```',
              '',
              '_Workflow run:_ ' + context.runId
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
