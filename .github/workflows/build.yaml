name: build

on:
  workflow_call:
    outputs:
      image_tag:
        description: "Immutable image tag (sha-<short>)"
        value: ${{ jobs.build-and-push.outputs.image_tag }}
      repository_uri:
        description: "ECR repository URI"
        value: ${{ jobs.build-and-push.outputs.repository_uri }}

permissions:
  id-token: write
  contents: read
  packages: read

env:
  # Prefer GitHub Variables so you can reuse across repos/envs
  AWS_REGION:  ${{ vars.AWS_REGION }}           # e.g. eu-north-1
  ACCOUNT_ID:  ${{ vars.AWS_ACCOUNT_ID }}       # 275581418810
  REPO_NAME:   ${{ vars.ECR_REPO_NAME }}        # springboot-k8s-demo
  IMAGE_TAG:   sha-${{ github.sha }}
  # Set platforms you actually need; drop arm64 if not required
  PLATFORMS:   linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tag }}
      repository_uri: ${{ steps.meta.outputs.repo_uri }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::275581418810:role/springboot-k8s-github-deployer
          role-session-name: gha-deploy

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU (only if arm64 in PLATFORMS)
        if: contains(env.PLATFORMS, 'arm64')
        uses: docker/setup-qemu-action@v3

      - name: Resolve metadata
        id: meta
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "tag=sha-$SHORT_SHA" >> "$GITHUB_OUTPUT"
          echo "repo_uri=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPO_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build & Push (bake)
        env:
          COMPOSE_FILE: /dev/null
        run: |
          docker buildx bake -f docker-bake.hcl \
            --set app.platform=${PLATFORMS} \
            --set app-release.tags=${{ steps.meta.outputs.repo_uri }}:${{ steps.meta.outputs.tag }} \
            --push app-release

      - name: Verify image exists
        run: |
          aws ecr describe-images \
            --repository-name "$REPO_NAME" \
            --image-ids imageTag="${{ steps.meta.outputs.tag }}" \
            --region "$AWS_REGION" >/dev/null
          echo "Pushed ${{ steps.meta.outputs.repo_uri }}:${{ steps.meta.outputs.tag }}"
